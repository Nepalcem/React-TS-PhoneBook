{"version":3,"file":"static/js/340.4459782c.chunk.js","mappings":"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","sources":["components/AlreadyAccountBlock/AllreadyAccount.styled.ts","components/AlreadyAccountBlock/AlreadyAccount.tsx","components/ContactLayout/ContactLayout.styled.ts","components/SignupForm/SignupForm.styled.ts","components/SignupForm/SignupForm.tsx","components/pages/Home/HomeContent/HomeContent.styled.ts","components/pages/loginPage/LoginPage.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const AllreadyStyledBlock = styled.p`\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n`;","import { FC } from \"react\";\r\nimport { AllreadyStyledBlock } from \"./AllreadyAccount.styled\";\r\nimport { StyledLoginLink } from \"components/pages/Home/HomeContent/HomeContent.styled\";\r\n\r\n\r\nconst AllreadyAccount: FC<{ isLogin: boolean }> = ({ isLogin }) => {\r\n  return (\r\n    <>\r\n      {isLogin ? (\r\n        <AllreadyStyledBlock>\r\n          Don't have an account?{\" \"}\r\n          <StyledLoginLink to=\"/register\">Register</StyledLoginLink> here.\r\n        </AllreadyStyledBlock>\r\n      ) : (\r\n        <AllreadyStyledBlock>\r\n          Already registered?{\" \"}\r\n          <StyledLoginLink to=\"/login\">Login</StyledLoginLink> here.\r\n        </AllreadyStyledBlock>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllreadyAccount;","import styled from \"styled-components\";\r\nimport { brownAccent } from \"utils/globalVariables\";\r\n\r\nexport const ContentBlock = styled.div`\r\n  min-width: 248px;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  background-color: white;\r\n  margin-bottom: 30px;\r\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\r\n  & h1,\r\n  h2 {\r\n    color: ${brownAccent};\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { TextField } from \"@mui/material\";\r\n\r\nexport const RegisterForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  max-width: 400px;\r\n  margin: 30px auto;\r\n`;\r\n\r\nexport const FormTextField = styled(TextField)`\r\n  .MuiInputLabel-root:not([data-shrink=\"true\"]) {\r\n    transform: translate(14px, 10px) scale(1);\r\n    font-size: 14px;\r\n  }\r\n  & input {\r\n    height: 18px;\r\n    padding-bottom: 10px;\r\n    padding-top: 10px;\r\n  }\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: none;\r\n  cursor: pointer;\r\n  max-height: 38px;\r\n  padding: 12px 16px;\r\n  border-radius: 4px;\r\n  text-decoration: none;\r\n  color: white;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  background-color: rgb(81, 203, 238);\r\n  transition: all 0.25s ease-in-out;\r\n  &:hover {\r\n    box-shadow: 0 0 10px rgba(81, 203, 238, 0.8),\r\n      0 0 20px rgba(81, 203, 238, 0.6), 0 0 30px rgba(81, 203, 238, 0.4);\r\n  }\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\r\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\r\n    sans-serif;\r\n`;\r\n\r\nexport const ErrorMessageStyled = styled.div`\r\n  font-size: 14px;\r\n  line-height: calc(14 / 12);\r\n  color: #da1414;\r\n`;","import {FC} from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  RegisterForm,\r\n  FormTextField,\r\n  FormButton,\r\n  ErrorMessageStyled,\r\n} from \"./SignupForm.styled\";\r\nimport { useFormik } from \"formik\";\r\nimport { IUserObject } from \"components/App/App.types\";\r\n\r\ninterface SignupFormProps {\r\n  isLogin: boolean;\r\n  onSubmit: (values: IUserObject, actions: any) => void;\r\n}\r\n\r\nconst SignupForm: FC<SignupFormProps> = ({ isLogin, onSubmit })  => {\r\n  const initialFormValues = isLogin\r\n    ? {\r\n        email: \"testphonebook@test.com\",\r\n        password: \"qwerty1\",\r\n      }\r\n    : {\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n      };\r\n\r\n  const validationSchema = isLogin\r\n    ? Yup.object({\r\n        email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\r\n        password: Yup.string()\r\n          .min(7, \"Must be at least 7 characters\")\r\n          .required(\"Required\"),\r\n      })\r\n    : Yup.object({\r\n        name: Yup.string()\r\n          .min(5, \"Must be at least 5 characters\")\r\n          .max(12, \"Must contain no longer than 12 characters\")\r\n          .required(\"Required\"),\r\n        email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\r\n        password: Yup.string()\r\n          .min(7, \"Must be at least 7 characters\")\r\n          .required(\"Required\"),\r\n      });\r\n\r\n  const formik = useFormik({\r\n    initialValues: initialFormValues,\r\n    validationSchema,\r\n    onSubmit: (values, actions) => {\r\n      onSubmit(values, actions);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <RegisterForm onSubmit={formik.handleSubmit}>\r\n      {!isLogin && (\r\n        <>\r\n          <FormTextField\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            label=\"Username\"\r\n            variant=\"outlined\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.name}\r\n          />\r\n          {formik.touched.name && formik.errors.name ? (\r\n            <ErrorMessageStyled>{formik.errors.name}</ErrorMessageStyled>\r\n          ) : null}\r\n        </>\r\n      )}\r\n\r\n      <>\r\n        <FormTextField\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.email}\r\n        />\r\n        {formik.touched.email && formik.errors.email ? (\r\n          <ErrorMessageStyled>{formik.errors.email}</ErrorMessageStyled>\r\n        ) : null}\r\n      </>\r\n      <>\r\n        <FormTextField\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.password}\r\n        />\r\n        {formik.touched.password && formik.errors.password ? (\r\n          <ErrorMessageStyled>{formik.errors.password}</ErrorMessageStyled>\r\n        ) : null}\r\n      </>\r\n      <FormButton type=\"submit\">{isLogin ? \"Login\" : \"Register\"}</FormButton>\r\n    </RegisterForm>\r\n  );\r\n}\r\n\r\nexport default SignupForm;","import styled from \"styled-components\";\r\nimport { desktop, mainBlueAccent } from \"utils/globalVariables\";\r\nimport { FaPhoneVolume } from \"react-icons/fa6\";\r\nimport { SlGlobe } from \"react-icons/sl\";\r\nimport { FaLock } from \"react-icons/fa\";\r\nimport { FcSearch } from \"react-icons/fc\";\r\nimport { FcPhoneAndroid } from \"react-icons/fc\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const StyledHomeImg = styled.img`\r\n  height: auto;\r\n  max-width: 100%;\r\n  @media screen and (min-width: ${desktop}) {\r\n    max-width: 50%;\r\n  }\r\n  display: inline-block;\r\n  border-radius: 8px;\r\n`;\r\n\r\nexport const StyledHomeText = styled.div`\r\n  text-align: justify;\r\n  @media screen and (min-width: ${desktop}) {\r\n    max-width: 50%;\r\n  }\r\n  text-indent: 15px;\r\n`;\r\n\r\nexport const StyledHomeDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (min-width: ${desktop}) {\r\n    flex-direction: row;\r\n  }\r\n  gap: 15px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const StyledHomeList = styled.ul`\r\n  list-style: none;\r\n`;\r\n\r\nexport const StyledHomeListItem = styled.li`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const StyledHomePhoneIcon = styled(FaPhoneVolume)`\r\n  color: #800020;\r\n`;\r\n\r\nexport const StyledHomeGlobeIcon = styled(SlGlobe)`\r\n  color: ${mainBlueAccent};\r\n`;\r\n\r\nexport const StyledHomeLockIcon = styled(FaLock)`\r\n  color: #ffc300;\r\n`;\r\n\r\nexport const StyledHomeSearchIcon = styled(FcSearch)``;\r\nexport const StyledHomeAccessIcon = styled(FcPhoneAndroid)``;\r\n\r\nexport const StyledLoginLink = styled(Link)`\r\n  font-weight: 500;\r\n  color: #800020;\r\n  transition: all 0.25s ease-in-out;\r\n  &:hover {\r\n    color: ${mainBlueAccent};\r\n  }\r\n`;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { logIn } from \"../../../redux/authorize/operations\";\r\nimport { ContentBlock } from \"components/ContactLayout/ContactLayout.styled\";\r\nimport SignupForm from \"components/SignupForm/SignupForm\";\r\nimport AllreadyAccount from \"components/AlreadyAccountBlock/AlreadyAccount\";\r\nimport { IUserObject } from \"components/App/App.types\";\r\nimport { AppDispatch } from \"redux/store\";\r\n\r\nfunction LoginPage() {\r\n  const useAppDispatch: () => AppDispatch = useDispatch;\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleSubmit = (values: IUserObject, actions: any) => {\r\n    const { email, password } = values;\r\n    const loginDataObject = { email, password };\r\n    dispatch(logIn(loginDataObject));\r\n  };\r\n  return (\r\n    <ContentBlock>\r\n      <h2>Login to your Account</h2>\r\n      <SignupForm isLogin={true} onSubmit={handleSubmit} />\r\n      <AllreadyAccount isLogin={true} />\r\n    </ContentBlock>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"names":["AllreadyStyledBlock","styled","p","_templateObject","_taggedTemplateLiteral","_ref","isLogin","_jsx","_Fragment","children","_jsxs","StyledLoginLink","to","ContentBlock","div","brownAccent","RegisterForm","form","FormTextField","TextField","_templateObject2","FormButton","button","_templateObject3","ErrorMessageStyled","_templateObject4","onSubmit","initialFormValues","email","password","name","validationSchema","Yup","required","min","max","formik","useFormik","initialValues","values","actions","handleSubmit","type","id","label","variant","onChange","handleChange","onBlur","handleBlur","value","touched","errors","StyledHomeImg","img","desktop","StyledHomeText","StyledHomeDiv","StyledHomeList","ul","StyledHomeListItem","li","_templateObject5","StyledHomePhoneIcon","FaPhoneVolume","_templateObject6","StyledHomeGlobeIcon","SlGlobe","_templateObject7","mainBlueAccent","StyledHomeLockIcon","FaLock","_templateObject8","StyledHomeSearchIcon","FcSearch","_templateObject9","StyledHomeAccessIcon","FcPhoneAndroid","_templateObject10","Link","_templateObject11","dispatch","useAppDispatch","useDispatch","SignupForm","loginDataObject","logIn","AllreadyAccount"],"sourceRoot":""}