{"version":3,"file":"static/js/665.a9c50511.chunk.js","mappings":"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","sources":["components/ContactLayout/ContactLayout.styled.ts","components/AddContactForm/Form.styled.ts","components/pages/registerPage/RegisterPage.styled.ts","components/AddContactForm/Form.tsx","components/Filter/Filter.styled.ts","components/Filter/Filter.tsx","components/contactsList/ContactsList.styled.ts","components/contactsList/TrashIcon.styled.ts","components/EditModal/EditIcon.styled.ts","components/EditModal/ModalForm/ModalForm.styled.ts","components/EditModal/ModalForm/ModalForm.tsx","components/EditModal/CloseIcon/CloseIcon.tsx","components/EditModal/modalStyles.ts","components/EditModal/EditModal.tsx","components/contactsList/CallIcon.tsx","components/contactsList/ContactsPreloader/ContactsPreloader.styled.ts","components/contactsList/ContactsPreloader/ContactsPreloader.tsx","components/contactsList/ContactsList.tsx","components/ContactLayout/ContactLayout.tsx","components/pages/ContactsPage.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { brownAccent } from \"utils/globalVariables\";\r\n\r\nexport const ContentBlock = styled.div`\r\n  min-width: 248px;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  background-color: white;\r\n  margin-bottom: 30px;\r\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\r\n  & h1,\r\n  h2 {\r\n    color: ${brownAccent};\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FormStyled = styled.form`\r\n  margin: 30px auto;\r\n  display: flex;\r\n  gap: 15px;\r\n  max-width: 360px;\r\n  flex-direction: column;\r\n\r\n  & button {\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\",\r\n      \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\r\n      \"Helvetica Neue\", sans-serif;\r\n    font-weight: 500;\r\n    background-color: rgb(81, 203, 238);\r\n    color: white;\r\n    padding: 0px 25px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    overflow: hidden;\r\n    height: 36px;\r\n    max-width: 180px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    transition: all 0.25s ease-in-out;\r\n  }\r\n\r\n  & .loading-icon {\r\n    animation: animate 2s infinite;\r\n  }\r\n\r\n  @keyframes animate {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  & button:hover {\r\n    box-shadow: 0 0 10px rgba(81, 203, 238, 0.8),\r\n      0 0 20px rgba(81, 203, 238, 0.6), 0 0 30px rgba(81, 203, 238, 0.4);\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { TextField } from \"@mui/material\";\r\n\r\nexport const RegisterForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const FormTextField = styled(TextField)`\r\n  .MuiInputLabel-root:not([data-shrink=\"true\"]) {\r\n    transform: translate(14px, 10px) scale(1);\r\n    font-size: 14px;\r\n  }\r\n  & input {\r\n    height: 18px;\r\n    padding-bottom: 10px;\r\n    padding-top: 10px;\r\n  }\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: none;\r\n  cursor: pointer;\r\n  max-height: 38px;\r\n  padding: 12px 16px;\r\n  border-radius: 4px;\r\n  text-decoration: none;\r\n  color: white;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  background-color: rgb(81, 203, 238);\r\n  transition: all 0.25s ease-in-out;\r\n  &:hover {\r\n    box-shadow: 0 0 10px rgba(81, 203, 238, 0.8),\r\n      0 0 20px rgba(81, 203, 238, 0.6), 0 0 30px rgba(81, 203, 238, 0.4);\r\n  }\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\r\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\r\n    sans-serif;\r\n`;\r\n","import { FC, useState, ChangeEvent, FormEvent } from \"react\";\r\nimport { FormStyled } from \"./Form.styled\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { LuLoader2 } from \"react-icons/lu\";\r\nimport { addContact } from \"api-functions/api\";\r\n// import { getContacts, getIsAddContactPending } from \"redux/selectors\";\r\nimport * as selectors from \"../../redux/selectors\";\r\n\r\nimport { FormTextField } from \"components/pages/registerPage/RegisterPage.styled\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useAppDispatch, useAppSelector } from \"components/hooks/typedHooks\";\r\n\r\n\r\nconst Form: FC = () => {\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [number, setNumber] = useState<string>(\"\");\r\n \r\n  const dispatch = useAppDispatch();\r\n  \r\n  const contacts = useAppSelector(selectors.getContacts);\r\n  const isAddContactLoading = useAppSelector(selectors.getIsAddContactPending);\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.currentTarget.name === \"name\") {\r\n      setName(e.currentTarget.value);\r\n    } else {\r\n      setNumber(e.currentTarget.value);\r\n    }\r\n  };\r\n\r\n  const addContactItem = (name: string, number: string) => {\r\n    const existingContact = contacts.find(\r\n      (contact) => name.toLowerCase() === contact.name.toLowerCase()\r\n    );\r\n\r\n    if (existingContact) {\r\n      return null;\r\n    }\r\n    const userObj = {\r\n      name,\r\n      number,\r\n    };\r\n    return userObj;\r\n  };\r\n\r\n  const submitHandler = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    if (name.trim().length === 0 || number.trim().length === 0) {\r\n      toast.warning(\"Name or phone must not be empty!\");\r\n      return;\r\n    }\r\n    const newContact = addContactItem(name, number);\r\n    if (newContact === null) {\r\n      return alert(`${name} is already in contacts`);\r\n    } else {\r\n      dispatch(addContact(newContact));\r\n      setName(\"\");\r\n      setNumber(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormStyled onSubmit={submitHandler}>\r\n      <FormTextField\r\n        type=\"text\"\r\n        name=\"name\"\r\n        inputProps={{ pattern: \"^[A-Za-z\\u0080-\\uFFFF ' ]+$\" }}\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n        onChange={handleChange}\r\n        value={name}\r\n        autoComplete=\"off\"\r\n        label=\"Name\"\r\n        variant=\"outlined\"\r\n      />\r\n      <FormTextField\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        inputProps={{ pattern: \"^(+?[0-9.()-s]*)$\" }}\r\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        required\r\n        onChange={handleChange}\r\n        value={number}\r\n        autoComplete=\"off\"\r\n        label=\"Phone\"\r\n        variant=\"outlined\"\r\n      />\r\n\r\n      <button type=\"submit\" disabled={isAddContactLoading}>\r\n        {isAddContactLoading ? (\r\n          <LuLoader2 className=\"loading-icon\"></LuLoader2>\r\n        ) : (\r\n          <FaPlus></FaPlus>\r\n        )}{\" \"}\r\n        Add Contact\r\n      </button>\r\n    </FormStyled>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import styled from \"styled-components\";\r\nimport { tablet } from \"utils/globalVariables\";\r\n\r\nexport const FilterStyled = styled.form`\r\n  & label {\r\n    display: flex;\r\n    gap: 20px;\r\n    align-items: baseline;\r\n    font-weight: 500;\r\n  }\r\n  & input {\r\n    max-width: 150px;\r\n    transition: all 0.3s ease-in-out;\r\n    outline: none;\r\n    padding: 9px;\r\n    border: 1px solid #dddddd;\r\n    border-radius: 3px;\r\n    height: 18px;\r\n  }\r\n  & input:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 5px rgba(81, 203, 238, 1);\r\n    padding: 9px;\r\n    border: 1px solid rgba(81, 203, 238, 1);\r\n  }\r\n`;\r\n\r\nexport const FilterBlock = styled.div`\r\n  @media screen and (max-width: ${tablet}) {\r\n    & h2 {\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: ${tablet}) {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n`;","import { ChangeEvent } from \"react\";\r\nimport { FilterStyled, FilterBlock } from \"./Filter.styled\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { filterItems } from \"../../redux/slices/filterSlice\";\r\nimport * as selectors from \"../../redux/selectors\";\r\nimport { AppDispatch } from \"redux/store\";\r\n\r\nconst Filter = () => {\r\n  const useAppDispatch: () => AppDispatch = useDispatch;\r\n  const dispatch = useAppDispatch();\r\n  const filter = useSelector(selectors.getFilter);\r\n\r\n  const changeFilter = (e: ChangeEvent<HTMLInputElement>) => {\r\n    dispatch(filterItems(e.currentTarget.value.trim()));\r\n  };\r\n  return (\r\n    <FilterBlock>\r\n      <h2>Contacts List:</h2>\r\n      <FilterStyled>\r\n        <label>\r\n          Search by name:\r\n          <input\r\n            className=\"filter-input\"\r\n            type=\"text\"\r\n            value={filter}\r\n            onChange={changeFilter}\r\n          />\r\n        </label>\r\n      </FilterStyled>\r\n    </FilterBlock>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import styled from \"styled-components\";\r\n\r\ninterface ContactListWrapperProps {\r\n  $haveContacts: boolean;\r\n}\r\n\r\nexport const ContactListWrapper = styled.div<ContactListWrapperProps>`\r\n  position: relative;\r\n  min-height: ${(props) => (props.$haveContacts ? \"auto\" : \"150px\")};\r\n`;\r\n\r\nexport const ContactsStyled = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  & .contact__data {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 4px;\r\n  }\r\n  & .item {\r\n    padding: 6px 20px;\r\n    margin-bottom: 10px;\r\n    border-radius: 4px;\r\n    box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    gap: 25px;\r\n    transition: box-shadow 0.25s ease-in-out;\r\n    background-color: white;\r\n    & .contact__data {\r\n      flex-grow: 1;\r\n      align-items: flex-start;\r\n    }\r\n  }\r\n  & .name {\r\n    font-weight: 500;\r\n  }\r\n  & .phone {\r\n    font-style: italic;\r\n  }\r\n\r\n  & .item:hover .name {\r\n    animation: tilt-shaking 0.25s infinite;\r\n  }\r\n  & .item:hover {\r\n    box-shadow: 0 1px 6px rgba(81, 203, 238, 0.6);\r\n  }\r\n\r\n  @keyframes tilt-shaking {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    25% {\r\n      transform: rotate(5deg);\r\n    }\r\n    50% {\r\n      transform: rotate(0eg);\r\n    }\r\n    75% {\r\n      transform: rotate(-5deg);\r\n    }\r\n    100% {\r\n      transform: rotate(0deg);\r\n    }\r\n  }\r\n\r\n  & button {\r\n    background-color: #ee4b2b;\r\n    color: white;\r\n    padding: 0px 15px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    overflow: hidden;\r\n    height: 24px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { FaPhoneAlt } from \"react-icons/fa\";\r\n\r\nexport const StyledTrashIcon = styled(FaTrashAlt)`\r\n  font-size: 20px;\r\n  color: #ee4b2b;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const StyledCallIcon = styled(FaPhoneAlt)`\r\n  font-size: 22px;\r\n  color: #50c878;\r\n  cursor: pointer;\r\n`;","import styled from \"styled-components\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\n\r\nexport const StyledEditIcon = styled(FaEdit)`\r\n  font-size: 22px;\r\n  color: rgb(81, 203, 238);\r\n  cursor: pointer;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const ModalFormStyled = styled.form`\r\n  margin: 30px auto;\r\n  display: flex;\r\n  gap: 15px;\r\n  max-width: 360px;\r\n  flex-direction: column;\r\n\r\n  & button {\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\",\r\n      \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\r\n      \"Helvetica Neue\", sans-serif;\r\n    font-weight: 500;\r\n    background-color: rgb(81, 203, 238);\r\n    color: white;\r\n    padding: 0px 25px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    overflow: hidden;\r\n    height: 36px;\r\n    max-width: 180px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    transition: all 0.25s ease-in-out;\r\n  }\r\n\r\n  & .loading-icon {\r\n    animation: animate 2s infinite;\r\n  }\r\n\r\n  @keyframes animate {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  & button:hover {\r\n    box-shadow: 0 0 10px rgba(81, 203, 238, 0.8),\r\n      0 0 20px rgba(81, 203, 238, 0.6), 0 0 30px rgba(81, 203, 238, 0.4);\r\n  }\r\n`;\r\n","import { useState, FC, ChangeEvent, FormEvent } from \"react\";\r\nimport { ModalFormStyled } from \"./ModalForm.styled\";\r\nimport { FaCheck } from \"react-icons/fa\";\r\nimport { LuLoader2 } from \"react-icons/lu\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FormTextField } from \"components/pages/registerPage/RegisterPage.styled\";\r\nimport { toast } from \"react-toastify\";\r\nimport { updateContact } from \"api-functions/api\";\r\nimport * as selectors from \"../../../redux/selectors\";\r\n\r\nimport { ContactObject } from \"components/App/App.types\";\r\nimport { AppDispatch } from \"redux/store\";\r\n\r\nconst ModalForm: FC<ContactObject> = ({ id, name, number }) => {\r\n  const [contactName, setContactName] = useState<string>(name);\r\n  const [contactNumber, setContactNumber] = useState<string>(number);\r\n  const useAppDispatch: () => AppDispatch = useDispatch;\r\n  const dispatch = useAppDispatch();\r\n  const isAddContactLoading = useSelector(selectors.getIsAddContactPending);\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.currentTarget.name === \"name\") {\r\n      setContactName(e.currentTarget.value);\r\n    } else {\r\n      setContactNumber(e.currentTarget.value);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    if (contactName.trim().length === 0 || contactNumber.trim().length === 0) {\r\n      toast.warning(\"Name or phone must not be empty!\");\r\n      return;\r\n    }\r\n    const updatedContact = {\r\n      id,\r\n      name: contactName.trim(),\r\n      number: contactNumber.trim(),\r\n    };\r\n\r\n    dispatch(updateContact(updatedContact as ContactObject));\r\n  };\r\n\r\n  return (\r\n    <ModalFormStyled onSubmit={submitHandler}>\r\n      <FormTextField\r\n        type=\"text\"\r\n        name=\"name\"\r\n        inputProps={{ pattern: \"^[A-Za-z\\u0080-\\uFFFF ' ]+$\" }}\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n        onChange={handleChange}\r\n        value={contactName}\r\n        autoComplete=\"off\"\r\n        label=\"Name\"\r\n        variant=\"outlined\"\r\n      />\r\n      <FormTextField\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        inputProps={{ pattern: \"^(+?[0-9.()-s]*)$\" }}\r\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        required\r\n        onChange={handleChange}\r\n        value={contactNumber}\r\n        autoComplete=\"off\"\r\n        label=\"Phone\"\r\n        variant=\"outlined\"\r\n      />\r\n\r\n      <button type=\"submit\" disabled={isAddContactLoading}>\r\n        {isAddContactLoading ? (\r\n          <LuLoader2 className=\"loading-icon\"></LuLoader2>\r\n        ) : (\r\n          <FaCheck />\r\n        )}\r\n        Confirm\r\n      </button>\r\n    </ModalFormStyled>\r\n  );\r\n};\r\n\r\nexport default ModalForm;","import { VscChromeClose } from \"react-icons/vsc\";\r\n\r\nexport default function CloseIcon() {\r\n  return <VscChromeClose />;\r\n}\r\n","import { mainBlueAccent } from \"utils/globalVariables\";\r\n\r\nexport const mainModalStyle = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 240,\r\n  \"@media (min-width: 768px)\": {\r\n    width: 300,\r\n  },\r\n  bgcolor: \"background.paper\",\r\n  borderRadius: 2,\r\n  boxShadow: \"rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px\",\r\n  p: 4,\r\n};\r\n\r\nexport const closeButtonStyle = {\r\n  position: \"absolute\",\r\n  top: 12,\r\n  right: 20,\r\n  color: `${mainBlueAccent}`,\r\n} as React.CSSProperties;\r\n","import { useState, FC } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { StyledEditIcon } from \"./EditIcon.styled\";\r\nimport ModalForm from \"./ModalForm/ModalForm\";\r\nimport CloseIcon from \"./CloseIcon/CloseIcon\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { mainModalStyle, closeButtonStyle } from \"./modalStyles\";\r\nimport { ContactObject } from \"components/App/App.types\";\r\n\r\n\r\nconst EditModal: FC<ContactObject> = ({ id, name, number }) => {\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <StyledEditIcon onClick={handleOpen} />\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={mainModalStyle}>\r\n          <h2>Update Contact</h2>\r\n          <ModalForm id={id} name={name} number={number} />\r\n          <IconButton\r\n            edge=\"end\"\r\n            color=\"inherit\"\r\n            onClick={handleClose}\r\n            aria-label=\"close\"\r\n            style={closeButtonStyle}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditModal;","import React, {FC} from \"react\";\r\nimport { StyledCallIcon } from \"./TrashIcon.styled\";\r\n\r\nconst CallIcon: FC<{href: string}>= ({ href }) => {\r\n  return (\r\n    <a href={`tel:${href}`}>\r\n      <StyledCallIcon />\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default CallIcon;","import styled from \"styled-components\";\r\n\r\nexport const LoaderWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  z-index: 100;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n","import { LoaderWrapper } from \"./ContactsPreloader.styled\";\r\nimport { Hourglass } from \"react-loader-spinner\";\r\nimport { burgundyRed } from \"utils/globalVariables\";\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <LoaderWrapper>\r\n      <Hourglass\r\n        height=\"40\"\r\n        width=\"40\"\r\n        colors={[burgundyRed, \"#770012\"]}\r\n        ariaLabel=\"loader\"\r\n      />\r\n    </LoaderWrapper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ContactListWrapper, ContactsStyled } from \"./ContactsList.styled\";\r\nimport { StyledTrashIcon } from \"./TrashIcon.styled\";\r\nimport * as selectors from \"../../redux/selectors\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { deleteContact } from \"api-functions/api\";\r\nimport EditModal from \"components/EditModal/EditModal\";\r\nimport CallIcon from \"./CallIcon\";\r\nimport { Loader } from \"./ContactsPreloader/ContactsPreloader\";\r\nimport { AppDispatch } from \"redux/store\";\r\n\r\nconst ContactsList = () => {\r\n  const useAppDispatch: () => AppDispatch = useDispatch;\r\n  const dispatch = useAppDispatch();\r\n  const isLoading = useSelector(selectors.getIsLoading);\r\n  const errorMessage = useSelector(selectors.getError);\r\n  const contacts = useSelector(selectors.getVisibleContacts);\r\n\r\n  const haveContacts = !!contacts.length;\r\n\r\n  const handleDelete = (id:number, name:string) => {\r\n    const isConfirmed = window.confirm(\r\n      `Do you want to delete ${name} from your contacts?`\r\n    );\r\n\r\n    if (isConfirmed) {\r\n      dispatch(deleteContact(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ContactListWrapper $haveContacts={haveContacts}>\r\n      {isLoading && !errorMessage && <Loader />}\r\n      <ContactsStyled>\r\n        {contacts.map(({ name, id, number }) => (\r\n          <li key={id} className=\"item\">\r\n            <div className=\"contact__data\">\r\n              <span className=\"name\">\r\n                {name.charAt(0).toUpperCase() + name.slice(1)}\r\n              </span>\r\n              <span className=\"phone\">{number} </span>\r\n            </div>\r\n            <CallIcon href={number} />\r\n            <EditModal id={id} name={name} number={number} />\r\n            <StyledTrashIcon\r\n              onClick={() => {\r\n                if (id !== undefined) {\r\n                  handleDelete(id, name);\r\n                }\r\n              }}\r\n            ></StyledTrashIcon>\r\n          </li>\r\n        ))}\r\n      </ContactsStyled>\r\n    </ContactListWrapper>\r\n  );\r\n};\r\n\r\nexport default ContactsList;","import Form from \"components/AddContactForm/Form\";\r\nimport Filter from \"components/Filter/Filter\";\r\nimport ContactsList from \"components/contactsList/ContactsList\";\r\nimport { ContentBlock } from \"./ContactLayout.styled\";\r\n\r\nfunction ContactLayout() {\r\n  return (\r\n    <div>\r\n      <ContentBlock>\r\n        <h1>Add a new contact</h1>\r\n        <Form></Form>\r\n      </ContentBlock>\r\n      <ContentBlock>\r\n        <Filter />\r\n      </ContentBlock>\r\n      <ContactsList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactLayout;","import React, { useEffect } from \"react\";\r\nimport { useAuthorize } from \"components/hooks/useAuthorize\";\r\nimport ContactLayout from \"components/ContactLayout/ContactLayout\";\r\nimport { fetchContacts } from \"api-functions/api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AppDispatch } from \"redux/store\";\r\n\r\nfunction ContactsPage() {\r\n  const { isLoggedIn } = useAuthorize();\r\n  const useAppDispatch: () => AppDispatch = useDispatch;\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n  return <div>{isLoggedIn && <ContactLayout />}</div>;\r\n}\r\n\r\nexport default ContactsPage;\r\n"],"names":["ContentBlock","styled","div","_templateObject","_taggedTemplateLiteral","brownAccent","FormStyled","form","FormTextField","TextField","_templateObject2","button","_templateObject3","Form","name","setName","useState","number","setNumber","dispatch","useAppDispatch","contacts","useAppSelector","selectors","isAddContactLoading","handleChange","e","currentTarget","value","_jsxs","onSubmit","preventDefault","trim","length","toast","warning","newContact","addContactItem","find","contact","toLowerCase","alert","concat","addContact","children","_jsx","type","inputProps","pattern","title","required","onChange","autoComplete","label","variant","disabled","LuLoader2","className","FaPlus","FilterStyled","FilterBlock","tablet","Filter","useDispatch","filter","useSelector","filterItems","ContactListWrapper","props","$haveContacts","ContactsStyled","ul","StyledTrashIcon","FaTrashAlt","StyledCallIcon","FaPhoneAlt","StyledEditIcon","FaEdit","ModalFormStyled","_ref","id","contactName","setContactName","contactNumber","setContactNumber","updatedContact","updateContact","FaCheck","CloseIcon","VscChromeClose","mainModalStyle","position","top","left","transform","width","bgcolor","borderRadius","boxShadow","p","closeButtonStyle","right","color","mainBlueAccent","open","setOpen","handleClose","_Fragment","onClick","handleOpen","Modal","onClose","Box","sx","ModalForm","IconButton","edge","style","href","LoaderWrapper","Loader","Hourglass","height","colors","burgundyRed","ariaLabel","ContactsList","isLoading","errorMessage","haveContacts","map","charAt","toUpperCase","slice","CallIcon","EditModal","undefined","handleDelete","window","confirm","deleteContact","isLoggedIn","useAuthorize","useEffect","fetchContacts","ContactLayout"],"sourceRoot":""}