{"version":3,"file":"static/js/665.a9c50511.chunk.js","mappings":"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","sources":["components/ContactLayout/ContactLayout.styled.ts","components/AddContactForm/Form.styled.ts","components/pages/registerPage/RegisterPage.styled.ts","components/AddContactForm/Form.tsx","components/Filter/Filter.styled.ts","components/Filter/Filter.tsx","components/contactsList/ContactsList.styled.ts","components/contactsList/TrashIcon.styled.ts","components/EditModal/EditIcon.styled.ts","components/EditModal/ModalForm/ModalForm.styled.ts","components/EditModal/ModalForm/ModalForm.tsx","components/EditModal/CloseIcon/CloseIcon.tsx","components/EditModal/modalStyles.ts","components/EditModal/EditModal.tsx","components/contactsList/CallIcon.tsx","components/contactsList/ContactsPreloader/ContactsPreloader.styled.ts","components/contactsList/ContactsPreloader/ContactsPreloader.tsx","components/contactsList/ContactsList.tsx","components/ContactLayout/ContactLayout.tsx","components/pages/ContactsPage.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { brownAccent } from \"utils/globalVariables\";\n\nexport const ContentBlock = styled.div`\n  min-width: 248px;\n  border-radius: 8px;\n  padding: 20px;\n  background-color: white;\n  margin-bottom: 30px;\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  & h1,\n  h2 {\n    color: ${brownAccent};\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const FormStyled = styled.form`\n  margin: 30px auto;\n  display: flex;\n  gap: 15px;\n  max-width: 360px;\n  flex-direction: column;\n\n  & button {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\",\n      \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\n      \"Helvetica Neue\", sans-serif;\n    font-weight: 500;\n    background-color: rgb(81, 203, 238);\n    color: white;\n    padding: 0px 25px;\n    border: none;\n    border-radius: 4px;\n    font-size: 16px;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n    height: 36px;\n    max-width: 180px;\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    transition: all 0.25s ease-in-out;\n  }\n\n  & .loading-icon {\n    animation: animate 2s infinite;\n  }\n\n  @keyframes animate {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  & button:hover {\n    box-shadow: 0 0 10px rgba(81, 203, 238, 0.8),\n      0 0 20px rgba(81, 203, 238, 0.6), 0 0 30px rgba(81, 203, 238, 0.4);\n  }\n`;\n","import styled from \"styled-components\";\nimport { TextField } from \"@mui/material\";\n\nexport const RegisterForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const FormTextField = styled(TextField)`\n  .MuiInputLabel-root:not([data-shrink=\"true\"]) {\n    transform: translate(14px, 10px) scale(1);\n    font-size: 14px;\n  }\n  & input {\n    height: 18px;\n    padding-bottom: 10px;\n    padding-top: 10px;\n  }\n`;\n\nexport const FormButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  cursor: pointer;\n  max-height: 38px;\n  padding: 12px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  font-weight: 500;\n  font-size: 16px;\n  background-color: rgb(81, 203, 238);\n  transition: all 0.25s ease-in-out;\n  &:hover {\n    box-shadow: 0 0 10px rgba(81, 203, 238, 0.8),\n      0 0 20px rgba(81, 203, 238, 0.6), 0 0 30px rgba(81, 203, 238, 0.4);\n  }\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n`;\n","import { FC, useState, ChangeEvent, FormEvent } from \"react\";\nimport { FormStyled } from \"./Form.styled\";\nimport { FaPlus } from \"react-icons/fa\";\nimport { LuLoader2 } from \"react-icons/lu\";\nimport { addContact } from \"api-functions/api\";\n// import { getContacts, getIsAddContactPending } from \"redux/selectors\";\nimport * as selectors from \"../../redux/selectors\";\n\nimport { FormTextField } from \"components/pages/registerPage/RegisterPage.styled\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch, useAppSelector } from \"components/hooks/typedHooks\";\n\n\nconst Form: FC = () => {\n  const [name, setName] = useState<string>(\"\");\n  const [number, setNumber] = useState<string>(\"\");\n \n  const dispatch = useAppDispatch();\n  \n  const contacts = useAppSelector(selectors.getContacts);\n  const isAddContactLoading = useAppSelector(selectors.getIsAddContactPending);\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.currentTarget.name === \"name\") {\n      setName(e.currentTarget.value);\n    } else {\n      setNumber(e.currentTarget.value);\n    }\n  };\n\n  const addContactItem = (name: string, number: string) => {\n    const existingContact = contacts.find(\n      (contact) => name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n    if (existingContact) {\n      return null;\n    }\n    const userObj = {\n      name,\n      number,\n    };\n    return userObj;\n  };\n\n  const submitHandler = (e: FormEvent) => {\n    e.preventDefault();\n    if (name.trim().length === 0 || number.trim().length === 0) {\n      toast.warning(\"Name or phone must not be empty!\");\n      return;\n    }\n    const newContact = addContactItem(name, number);\n    if (newContact === null) {\n      return alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact(newContact));\n      setName(\"\");\n      setNumber(\"\");\n    }\n  };\n\n  return (\n    <FormStyled onSubmit={submitHandler}>\n      <FormTextField\n        type=\"text\"\n        name=\"name\"\n        inputProps={{ pattern: \"^[A-Za-z\\u0080-\\uFFFF ' ]+$\" }}\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleChange}\n        value={name}\n        autoComplete=\"off\"\n        label=\"Name\"\n        variant=\"outlined\"\n      />\n      <FormTextField\n        type=\"tel\"\n        name=\"number\"\n        inputProps={{ pattern: \"^(+?[0-9.()-s]*)$\" }}\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleChange}\n        value={number}\n        autoComplete=\"off\"\n        label=\"Phone\"\n        variant=\"outlined\"\n      />\n\n      <button type=\"submit\" disabled={isAddContactLoading}>\n        {isAddContactLoading ? (\n          <LuLoader2 className=\"loading-icon\"></LuLoader2>\n        ) : (\n          <FaPlus></FaPlus>\n        )}{\" \"}\n        Add Contact\n      </button>\n    </FormStyled>\n  );\n};\n\nexport default Form;\n","import styled from \"styled-components\";\nimport { tablet } from \"utils/globalVariables\";\n\nexport const FilterStyled = styled.form`\n  & label {\n    display: flex;\n    gap: 20px;\n    align-items: baseline;\n    font-weight: 500;\n  }\n  & input {\n    max-width: 150px;\n    transition: all 0.3s ease-in-out;\n    outline: none;\n    padding: 9px;\n    border: 1px solid #dddddd;\n    border-radius: 3px;\n    height: 18px;\n  }\n  & input:focus {\n    outline: none;\n    box-shadow: 0 0 5px rgba(81, 203, 238, 1);\n    padding: 9px;\n    border: 1px solid rgba(81, 203, 238, 1);\n  }\n`;\n\nexport const FilterBlock = styled.div`\n  @media screen and (max-width: ${tablet}) {\n    & h2 {\n      margin-bottom: 20px;\n    }\n  }\n\n  @media screen and (min-width: ${tablet}) {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;","import { ChangeEvent } from \"react\";\nimport { FilterStyled, FilterBlock } from \"./Filter.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { filterItems } from \"../../redux/slices/filterSlice\";\nimport * as selectors from \"../../redux/selectors\";\nimport { AppDispatch } from \"redux/store\";\n\nconst Filter = () => {\n  const useAppDispatch: () => AppDispatch = useDispatch;\n  const dispatch = useAppDispatch();\n  const filter = useSelector(selectors.getFilter);\n\n  const changeFilter = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatch(filterItems(e.currentTarget.value.trim()));\n  };\n  return (\n    <FilterBlock>\n      <h2>Contacts List:</h2>\n      <FilterStyled>\n        <label>\n          Search by name:\n          <input\n            className=\"filter-input\"\n            type=\"text\"\n            value={filter}\n            onChange={changeFilter}\n          />\n        </label>\n      </FilterStyled>\n    </FilterBlock>\n  );\n};\n\nexport default Filter;\n","import styled from \"styled-components\";\n\ninterface ContactListWrapperProps {\n  $haveContacts: boolean;\n}\n\nexport const ContactListWrapper = styled.div<ContactListWrapperProps>`\n  position: relative;\n  min-height: ${(props) => (props.$haveContacts ? \"auto\" : \"150px\")};\n`;\n\nexport const ContactsStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n\n  & .contact__data {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n  }\n  & .item {\n    padding: 6px 20px;\n    margin-bottom: 10px;\n    border-radius: 4px;\n    box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 25px;\n    transition: box-shadow 0.25s ease-in-out;\n    background-color: white;\n    & .contact__data {\n      flex-grow: 1;\n      align-items: flex-start;\n    }\n  }\n  & .name {\n    font-weight: 500;\n  }\n  & .phone {\n    font-style: italic;\n  }\n\n  & .item:hover .name {\n    animation: tilt-shaking 0.25s infinite;\n  }\n  & .item:hover {\n    box-shadow: 0 1px 6px rgba(81, 203, 238, 0.6);\n  }\n\n  @keyframes tilt-shaking {\n    0% {\n      transform: rotate(0deg);\n    }\n    25% {\n      transform: rotate(5deg);\n    }\n    50% {\n      transform: rotate(0eg);\n    }\n    75% {\n      transform: rotate(-5deg);\n    }\n    100% {\n      transform: rotate(0deg);\n    }\n  }\n\n  & button {\n    background-color: #ee4b2b;\n    color: white;\n    padding: 0px 15px;\n    border: none;\n    border-radius: 4px;\n    font-size: 16px;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n    height: 24px;\n  }\n`;\n","import styled from \"styled-components\";\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport { FaPhoneAlt } from \"react-icons/fa\";\n\nexport const StyledTrashIcon = styled(FaTrashAlt)`\n  font-size: 20px;\n  color: #ee4b2b;\n  cursor: pointer;\n`;\n\nexport const StyledCallIcon = styled(FaPhoneAlt)`\n  font-size: 22px;\n  color: #50c878;\n  cursor: pointer;\n`;","import styled from \"styled-components\";\nimport { FaEdit } from \"react-icons/fa\";\n\nexport const StyledEditIcon = styled(FaEdit)`\n  font-size: 22px;\n  color: rgb(81, 203, 238);\n  cursor: pointer;\n`;","import styled from \"styled-components\";\n\nexport const ModalFormStyled = styled.form`\n  margin: 30px auto;\n  display: flex;\n  gap: 15px;\n  max-width: 360px;\n  flex-direction: column;\n\n  & button {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\",\n      \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\n      \"Helvetica Neue\", sans-serif;\n    font-weight: 500;\n    background-color: rgb(81, 203, 238);\n    color: white;\n    padding: 0px 25px;\n    border: none;\n    border-radius: 4px;\n    font-size: 16px;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n    height: 36px;\n    max-width: 180px;\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    transition: all 0.25s ease-in-out;\n  }\n\n  & .loading-icon {\n    animation: animate 2s infinite;\n  }\n\n  @keyframes animate {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  & button:hover {\n    box-shadow: 0 0 10px rgba(81, 203, 238, 0.8),\n      0 0 20px rgba(81, 203, 238, 0.6), 0 0 30px rgba(81, 203, 238, 0.4);\n  }\n`;\n","import { useState, FC, ChangeEvent, FormEvent } from \"react\";\nimport { ModalFormStyled } from \"./ModalForm.styled\";\nimport { FaCheck } from \"react-icons/fa\";\nimport { LuLoader2 } from \"react-icons/lu\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormTextField } from \"components/pages/registerPage/RegisterPage.styled\";\nimport { toast } from \"react-toastify\";\nimport { updateContact } from \"api-functions/api\";\nimport * as selectors from \"../../../redux/selectors\";\n\nimport { ContactObject } from \"components/App/App.types\";\nimport { AppDispatch } from \"redux/store\";\n\nconst ModalForm: FC<ContactObject> = ({ id, name, number }) => {\n  const [contactName, setContactName] = useState<string>(name);\n  const [contactNumber, setContactNumber] = useState<string>(number);\n  const useAppDispatch: () => AppDispatch = useDispatch;\n  const dispatch = useAppDispatch();\n  const isAddContactLoading = useSelector(selectors.getIsAddContactPending);\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.currentTarget.name === \"name\") {\n      setContactName(e.currentTarget.value);\n    } else {\n      setContactNumber(e.currentTarget.value);\n    }\n  };\n\n  const submitHandler = (e: FormEvent) => {\n    e.preventDefault();\n    if (contactName.trim().length === 0 || contactNumber.trim().length === 0) {\n      toast.warning(\"Name or phone must not be empty!\");\n      return;\n    }\n    const updatedContact = {\n      id,\n      name: contactName.trim(),\n      number: contactNumber.trim(),\n    };\n\n    dispatch(updateContact(updatedContact as ContactObject));\n  };\n\n  return (\n    <ModalFormStyled onSubmit={submitHandler}>\n      <FormTextField\n        type=\"text\"\n        name=\"name\"\n        inputProps={{ pattern: \"^[A-Za-z\\u0080-\\uFFFF ' ]+$\" }}\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleChange}\n        value={contactName}\n        autoComplete=\"off\"\n        label=\"Name\"\n        variant=\"outlined\"\n      />\n      <FormTextField\n        type=\"tel\"\n        name=\"number\"\n        inputProps={{ pattern: \"^(+?[0-9.()-s]*)$\" }}\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleChange}\n        value={contactNumber}\n        autoComplete=\"off\"\n        label=\"Phone\"\n        variant=\"outlined\"\n      />\n\n      <button type=\"submit\" disabled={isAddContactLoading}>\n        {isAddContactLoading ? (\n          <LuLoader2 className=\"loading-icon\"></LuLoader2>\n        ) : (\n          <FaCheck />\n        )}\n        Confirm\n      </button>\n    </ModalFormStyled>\n  );\n};\n\nexport default ModalForm;","import { VscChromeClose } from \"react-icons/vsc\";\n\nexport default function CloseIcon() {\n  return <VscChromeClose />;\n}\n","import { mainBlueAccent } from \"utils/globalVariables\";\n\nexport const mainModalStyle = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 240,\n  \"@media (min-width: 768px)\": {\n    width: 300,\n  },\n  bgcolor: \"background.paper\",\n  borderRadius: 2,\n  boxShadow: \"rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px\",\n  p: 4,\n};\n\nexport const closeButtonStyle = {\n  position: \"absolute\",\n  top: 12,\n  right: 20,\n  color: `${mainBlueAccent}`,\n} as React.CSSProperties;\n","import { useState, FC } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport { StyledEditIcon } from \"./EditIcon.styled\";\nimport ModalForm from \"./ModalForm/ModalForm\";\nimport CloseIcon from \"./CloseIcon/CloseIcon\";\nimport { IconButton } from \"@mui/material\";\nimport { mainModalStyle, closeButtonStyle } from \"./modalStyles\";\nimport { ContactObject } from \"components/App/App.types\";\n\n\nconst EditModal: FC<ContactObject> = ({ id, name, number }) => {\n  const [open, setOpen] = useState<boolean>(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <>\n      <StyledEditIcon onClick={handleOpen} />\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={mainModalStyle}>\n          <h2>Update Contact</h2>\n          <ModalForm id={id} name={name} number={number} />\n          <IconButton\n            edge=\"end\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n            style={closeButtonStyle}\n          >\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </Modal>\n    </>\n  );\n}\n\nexport default EditModal;","import React, {FC} from \"react\";\nimport { StyledCallIcon } from \"./TrashIcon.styled\";\n\nconst CallIcon: FC<{href: string}>= ({ href }) => {\n  return (\n    <a href={`tel:${href}`}>\n      <StyledCallIcon />\n    </a>\n  );\n}\n\nexport default CallIcon;","import styled from \"styled-components\";\n\nexport const LoaderWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 100;\n  transform: translate(-50%, -50%);\n`;\n","import { LoaderWrapper } from \"./ContactsPreloader.styled\";\nimport { Hourglass } from \"react-loader-spinner\";\nimport { burgundyRed } from \"utils/globalVariables\";\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <Hourglass\n        height=\"40\"\n        width=\"40\"\n        colors={[burgundyRed, \"#770012\"]}\n        ariaLabel=\"loader\"\n      />\n    </LoaderWrapper>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ContactListWrapper, ContactsStyled } from \"./ContactsList.styled\";\nimport { StyledTrashIcon } from \"./TrashIcon.styled\";\nimport * as selectors from \"../../redux/selectors\";\nimport { useSelector } from \"react-redux\";\nimport { deleteContact } from \"api-functions/api\";\nimport EditModal from \"components/EditModal/EditModal\";\nimport CallIcon from \"./CallIcon\";\nimport { Loader } from \"./ContactsPreloader/ContactsPreloader\";\nimport { AppDispatch } from \"redux/store\";\n\nconst ContactsList = () => {\n  const useAppDispatch: () => AppDispatch = useDispatch;\n  const dispatch = useAppDispatch();\n  const isLoading = useSelector(selectors.getIsLoading);\n  const errorMessage = useSelector(selectors.getError);\n  const contacts = useSelector(selectors.getVisibleContacts);\n\n  const haveContacts = !!contacts.length;\n\n  const handleDelete = (id:number, name:string) => {\n    const isConfirmed = window.confirm(\n      `Do you want to delete ${name} from your contacts?`\n    );\n\n    if (isConfirmed) {\n      dispatch(deleteContact(id));\n    }\n  };\n\n  return (\n    <ContactListWrapper $haveContacts={haveContacts}>\n      {isLoading && !errorMessage && <Loader />}\n      <ContactsStyled>\n        {contacts.map(({ name, id, number }) => (\n          <li key={id} className=\"item\">\n            <div className=\"contact__data\">\n              <span className=\"name\">\n                {name.charAt(0).toUpperCase() + name.slice(1)}\n              </span>\n              <span className=\"phone\">{number} </span>\n            </div>\n            <CallIcon href={number} />\n            <EditModal id={id} name={name} number={number} />\n            <StyledTrashIcon\n              onClick={() => {\n                if (id !== undefined) {\n                  handleDelete(id, name);\n                }\n              }}\n            ></StyledTrashIcon>\n          </li>\n        ))}\n      </ContactsStyled>\n    </ContactListWrapper>\n  );\n};\n\nexport default ContactsList;","import Form from \"components/AddContactForm/Form\";\nimport Filter from \"components/Filter/Filter\";\nimport ContactsList from \"components/contactsList/ContactsList\";\nimport { ContentBlock } from \"./ContactLayout.styled\";\n\nfunction ContactLayout() {\n  return (\n    <div>\n      <ContentBlock>\n        <h1>Add a new contact</h1>\n        <Form></Form>\n      </ContentBlock>\n      <ContentBlock>\n        <Filter />\n      </ContentBlock>\n      <ContactsList />\n    </div>\n  );\n}\n\nexport default ContactLayout;","import React, { useEffect } from \"react\";\nimport { useAuthorize } from \"components/hooks/useAuthorize\";\nimport ContactLayout from \"components/ContactLayout/ContactLayout\";\nimport { fetchContacts } from \"api-functions/api\";\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"redux/store\";\n\nfunction ContactsPage() {\n  const { isLoggedIn } = useAuthorize();\n  const useAppDispatch: () => AppDispatch = useDispatch;\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return <div>{isLoggedIn && <ContactLayout />}</div>;\n}\n\nexport default ContactsPage;\n"],"names":["ContentBlock","styled","div","_templateObject","_taggedTemplateLiteral","brownAccent","FormStyled","form","FormTextField","TextField","_templateObject2","button","_templateObject3","Form","name","setName","useState","number","setNumber","dispatch","useAppDispatch","contacts","useAppSelector","selectors","isAddContactLoading","handleChange","e","currentTarget","value","_jsxs","onSubmit","preventDefault","trim","length","toast","warning","newContact","addContactItem","find","contact","toLowerCase","alert","concat","addContact","children","_jsx","type","inputProps","pattern","title","required","onChange","autoComplete","label","variant","disabled","LuLoader2","className","FaPlus","FilterStyled","FilterBlock","tablet","Filter","useDispatch","filter","useSelector","filterItems","ContactListWrapper","props","$haveContacts","ContactsStyled","ul","StyledTrashIcon","FaTrashAlt","StyledCallIcon","FaPhoneAlt","StyledEditIcon","FaEdit","ModalFormStyled","_ref","id","contactName","setContactName","contactNumber","setContactNumber","updatedContact","updateContact","FaCheck","CloseIcon","VscChromeClose","mainModalStyle","position","top","left","transform","width","bgcolor","borderRadius","boxShadow","p","closeButtonStyle","right","color","mainBlueAccent","open","setOpen","handleClose","_Fragment","onClick","handleOpen","Modal","onClose","Box","sx","ModalForm","IconButton","edge","style","href","LoaderWrapper","Loader","Hourglass","height","colors","burgundyRed","ariaLabel","ContactsList","isLoading","errorMessage","haveContacts","map","charAt","toUpperCase","slice","CallIcon","EditModal","undefined","handleDelete","window","confirm","deleteContact","isLoggedIn","useAuthorize","useEffect","fetchContacts","ContactLayout"],"sourceRoot":""}